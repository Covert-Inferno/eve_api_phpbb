
includes/acp/acp_groups.php

Move:
          if ($config['eveapi_validation'])
          {
            $submit_ary = array_merge($submit_ary, array(
              'eveapi_special'	=>  request_var('group_eveapi_special', 0),
              'eveapi_ts3'		=>  request_var('group_eveapi_ts3', 0),
              'eveapi_openfire'	=>  request_var('group_eveapi_openfire', ''),
            ));
          }


To:
extract($phpbb_dispatcher->trigger_event('core.acp_manage_group_request_data', compact($vars)));



Move
            if ($config['eveapi_validation'])
            {
              $test_variables = array_merge($test_variables, array(
                'eveapi_special'	=>  'int',
                'eveapi_ts3'		=>  'int',
                'eveapi_openfire'	=>  'string',					
              ));
            }


To:
extract($phpbb_dispatcher->trigger_event('core.acp_manage_group_initialise_data', compact($vars)));


Move:

					'GROUP_EVEAPI_SPECIAL'  => (isset($group_row['group_eveapi_special']) && $group_row['group_eveapi_special']) ? ' checked="checked"' : '',
					'GROUP_EVEAPI_TS3'      => (isset($group_row['group_eveapi_ts3'])) ? $group_row['group_eveapi_ts3'] : 0,
					'GROUP_EVEAPI_OPENFIRE' => (isset($group_row['group_eveapi_openfire'])) ? $group_row['group_eveapi_openfire'] : "",

					'S_EVEAPI_VALIDATION'   => $config['eveapi_validation'],



To:
extract($phpbb_dispatcher->trigger_event('core.acp_manage_group_display_form', compact($vars)));

---------------------------------------------------------------------------------------------------------------------------------------------------

adm/style/acp_groups.html
Move:
	<!-- IF S_EVEAPI_VALIDATION -->
  <fieldset>
		<legend>EVE API settings</legend>
	<dl>
		<dt><label for="group_eveapi_special">Immunity:</label><br /><span>Do not remove users from this group during an API-Check?</span></dt>
		<dd><input name="group_eveapi_special" type="checkbox" value="1" class="radio" id="group_eveapi_special"{GROUP_EVEAPI_SPECIAL} /></dd>
	</dl>
	<dl>
		<dt><label for="group_eveapi_ts3">TeamSpeak 3:</label><br /><span>Enable integration of this TeamSpeak 3 group when a user is part of this forumgroup.</span></dt>
		<dd><input name="group_eveapi_ts3" type="text" id="group_eveapi_ts3" maxlength="4" size="4" value="{GROUP_EVEAPI_TS3}" /></dd>
	</dl>
	<dl>
		<dt><label for="group_eveapi_openfire">OpenFire:</label><br /><span>Set OpenFire group for users part of this forumgroup.</span></dt>
		<dd><input name="group_eveapi_openfire" type="text" id="group_eveapi_openfire" maxlength="20" size="20" value="{GROUP_EVEAPI_OPENFIRE}" /></dd>
	</dl>
	</fieldset>
  <!-- ENDIF -->

To:
<!-- EVENT acp_group_options_after -->


---------------------------------------------------------------------------------------------------------------------------------------------------

adm/style/acp_users.html

Duplicate, simplify, and move

<!-- ELSEIF S_EVEAPI_REGISTER -->

<!-- INCLUDE acp_users_eveapi_register.html -->

<!-- ELSEIF S_EVEAPI_TS -->

<!-- INCLUDE acp_users_eveapi_ts.html -->

<!-- ELSEIF S_EVEAPI_JABBER -->

<!-- INCLUDE acp_users_eveapi_jabber.html -->

Into a new template.

---------------------------------------------------------------------------------------------------------------------------------------------------

Need to have hard code changes to:
includes/acp/acp_users.php
includes/functions_admin.php
memberlist.php

To add:
			case INACTIVE_EVEAPI_INVALID:
			    $inactive_reason = "Invalid EVE API key.";
			    break;

			case INACTIVE_EVEAPI_NONMEMBER:
			    $inactive_reason = "With the current configuration, the user is not allowed to have an account.";
			    break;



---------------------------------------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------------------------------------

common.php

Move:

// Moved above masterswitch to avoid errors trying to use EVE BBcodes without having masterswitch enabled
require($phpbb_root_path . "includes/eveapi/functions_eveapi.php");

// Load PHEAL
use Pheal\Pheal;
\Pheal\Core\Config::getInstance()->cache = new \Pheal\Cache\MemcachedStorage();
\Pheal\Core\Config::getInstance()->access = new \Pheal\Access\StaticCheck();
\Pheal\Core\Config::getInstance()->http_user_agent = "EVE API for phpBB 3.x (phpBB 3.x; Pheal)";

// Load TeamSpeak3 PHP Framework
require($phpbb_root_path . "includes/eveapi/TeamSpeak3/TeamSpeak3.php");

// Load OpenFireUserService class
require($phpbb_root_path . "includes/eveapi/OpenFireUserService/OpenFireUserService.php");

To:
$phpbb_dispatcher->dispatch('core.common');

---------------------------------------------------------------------------------------------------------------------------------------------------

styles/prosilver/template/ucp_register.html

Move:
 	<!-- IF S_EVEAPI_VALIDATE -->
	<dl>
		<dt><label for="eveapi_keyid">{L_EVEAPI_KEYID}:</label></dt>
		<dd><input type="text" tabindex="6" name="eveapi_keyid" id="eveapi_keyid" size="10" maxlength="15" value="{EVEAPI_KEYID}" class="inputbox autowidth" title="{L_EVEAPI_KEYID}" /></dd>
	</dl>
	<dl>
		<dt><label for="eveapi_vcode">{L_EVEAPI_VCODE}:</label></dt>
		<dd><input type="text" tabindex="7" name="eveapi_vcode" id="eveapi_vcode" size="64" maxlength="64" value="{EVEAPI_VCODE}" class="inputbox autowidth" title="{L_EVEAPI_VCODE}" /></dd>
		<dd>Click <a href="https://support.eveonline.com/api/key/createpredefined/{L_EVEAPI_ACCESSMASK}" target="_blank">here</a> to create an API key with the correct permissions. Don't forget to set it as &#039;No Expiry&#039;!<br />It can sometimes take up to 15 minutes before the new API key is activated.</dd>
	</dl>
	<!-- ENDIF --> 


To:
<!-- EVENT ucp_register_credentials_after -->

---------------------------------------------------------------------------------------------------------------------------------------------------

includes/functions_users.php

Move:
 	if ($config['eveapi_validation'])
	{
		$sql_ary = array_merge($sql_ary, array(
			'eveapi_keyid'	=> $user_row['eveapi_keyid'],
			'eveapi_vcode'	=> $user_row['eveapi_vcode'],
		));
	}

To:
extract($phpbb_dispatcher->trigger_event('core.user_add_modify_data', compact($vars)));

---------------------------------------------------------------------------------------------------------------------------------------------------

includes/functions.php

Move:

  $driver = $cache->get_driver();
	$eve_players = $driver->get('_eve_players');
	$eve_online = $driver->get('_eve_online');

	if ($eve_players === false)
	{
		try {
			$pheal = new \Pheal\Pheal();

			$response = $pheal->serverScope->ServerStatus();
			$eve_online = (bool) $response->serverOpen;
			$eve_players = (int) $response->onlinePlayers;

			$driver->put('_eve_online', $eve_online, 120);
			$driver->put('_eve_players', $eve_players, 120);
		}
		catch (Exception $e) {
			$eve_online = false;
		}
	}

	if ($eve_online)
	{
		$eve_status = 'Players Online: ' . $eve_players;
	}
	else
	{
		$eve_status = 'Tranquility Server Down';
	}

	$eve_status .= '<br />Server Time: ' . date('H:i');


		'EVE_STATUS'		=> $eve_status,

    'S_EVEAPI_TRUSTED'      => $config['server_protocol'] . $config['server_name'] . $config['script_path'] . '/*',


To:
extract($phpbb_dispatcher->trigger_event('core.page_header_after', compact($vars)));

Move:

/**
 * Convert a unix timestamp into a readable format.
 */
function seconds_2_human($ss)
{
	$s = sprintf("%02s", $ss % 60);
	$m = sprintf("%02s", floor(($ss % 3600) / 60));
	$h = sprintf("%02s", floor(($ss % 86400) / 3600));
	$d = floor($ss / 86400);

	if ( $d == 0 )
	{
		return $h . ':' . $m . ':' . $s;
	}
	else
	{
		return $d . 'd ' . $h . ':' . $m . ':' . $s;
	}
}

To:
custom functions or something.

Move:

/**
* Delete Timers
*/
function delete_timer($timer_id_list)
{
	global $db, $template, $user, $config;
	global $auth;

	if (!$auth->acl_get('m_timerboard'))
	{
		trigger_error('NOT_AUTHORISED');
	}

	if (sizeof($timer_id_list))
	{
		$sql = 'DELETE FROM timerboard
			WHERE ' . $db->sql_in_set('timerID', $timer_id_list);
		$db->sql_query($sql);
	}

	add_log('admin', 'LOG_CLEAR_TIMERBOARD');
}

to mcp_timerboard.php file

Move:
changes from
function login_box()

To:
A new function in extensions as part of login_body.html for recovering from inactive account due to api issue.

---------------------------------------------------------------------------------------------------------------------------------------------------

styles/prosilver/template/login_body.html

Duplicate
Move:
 		<!-- IF S_EVEAPI_UPDATE -->
    <dl>
			<dt><label for="eveapi_keyid">EVE API KeyId:</label></dt>
			<dd><input type="text" tabindex="3" name="eveapi_keyid" id="eveapi_keyid" size="10" maxlength="25" value="" class="inputbox autowidth" title="EVE API KeyId" /></dd>
		</dl>
		<dl>
			<dt><label for="eveapi_vcode">EVE API Verification Code:</label></dt>
			<dd><input type="text" tabindex="4" name="eveapi_vcode" id="eveapi_vcode" size="64" maxlength="64" value="" class="inputbox autowidth" title="EVE API Verification Code" /><input type="hidden" name="eveapi_update" value="yes" /></dd>
			<dd>Click <a href="https://support.eveonline.com/api/key/createpredefined/{EVEAPI_ACCESSMASK}" target="_blank">here</a> to create an API key with the correct permissions. Don't forget to set it as &#039;No Expiry&#039;!<br />It can sometimes take up to 15 minutes before the new API key is activated.</dd>
		</dl>
    <!-- ENDIF --> 

To:
New login page

Move eveapi_update.php into the extension path and call for login.

Keep:
<!-- IF not S_EVEAPI_UPDATE --><dd><a href="./eveapi_update.php">I would like to reactivate my account by providing new API information.</a></dd><!-- ENDIF -->

add language to page_header event hook.

---------------------------------------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------------------------------------

includes/ucp/ucp_register.php

Create two custom field types as well as two custom profile fields, hidden to all, only displayed on registration, verification code and key_id.

on:
$cp->submit_cp_field('register', $user->get_iso_lang_id(), $cp_data, $error);

Run this:
			if (!sizeof($error) && $config['eveapi_validation'])
			{
				$characterInfo = eveapi_checkThisCharacter($data['eveapi_keyid'], $data['eveapi_vcode'], $data['username']);

				if (!empty($characterInfo["error"]))
				{
					$error = array_merge($error, $characterInfo["error"]);
				}
				else if (empty($characterInfo["forumGroups"]) && !$config['eveapi_nonmember'])
				{
					$error[] = 'This character is not permitted to have an account on this forum.';
				}
			}

On validate of one of the fields, pulling the username and other one directly from request_var

Move:
								$characterInfo = eveapi_checkThisCharacter($data['eveapi_keyid'], $data['eveapi_vcode'], $data['username']);

								$sql = "UPDATE " . USERS_TABLE . "
																SET user_character_id = '" . (int) $characterInfo["info"]["characterId"] . "'
																WHERE user_id = " . (int) $user_id;
								$db->sql_query($sql);


								// EVE API - Add the correct groups to the user.
								eveapi_setForumGroups($user_id, $characterInfo["forumGroups"]);

Into:
extract($phpbb_dispatcher->trigger_event('core.user_add_after', compact($vars)));



